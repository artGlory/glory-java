<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- https://mybatis.org/mybatis-3/zh/configuration.html#settings -->
    <settings>
        <!-- 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存。	true | false	true-->
        <setting name="cacheEnabled" value="false"/>
        <!-- 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置 fetchType属性来覆盖该项的开关状态。	true | false	false-->
        <setting name="lazyLoadingEnabled" value="false"/>
        <!--当开启时，任何方法的调用都会加载该对象的所有属性。 否则，每个属性会按需加载（参考 lazyLoadTriggerMethods)。	true | false	false （在 3.4.1 及之前的版本默认值为 true）-->
        <setting name="aggressiveLazyLoading" value="true"/>
        <!--是否允许单一语句返回多结果集（需要驱动支持）。	true | false	true-->
        <setting name="multipleResultSetsEnabled" value="true"/>
        <!--使用列标签代替列名。实际表现依赖于数据库驱动，具体可参考数据库驱动的相关文档，或通过对比测试来观察。	true | false	true-->
        <setting name="useColumnLabel" value="true"/>
        <!--允许 JDBC 支持自动生成主键，需要数据库驱动支持。如果设置为 true，将强制使用自动生成主键。尽管一些数据库驱动不支持此特性，但仍可正常工作（如 Derby）。	true | false	False-->
        <setting name="useGeneratedKeys" value="true"/>
        <!--指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示关闭自动映射；PARTIAL 只会自动映射没有定义嵌套结果映射的字段。 FULL 会自动映射任何复杂的结果集（无论是否嵌套）。	NONE, PARTIAL, FULL	PARTIAL-->
        <setting name="autoMappingBehavior" value="PARTIAL"/>
        <!--指定发现自动映射目标未知列（或未知属性类型）的行为。-->
        <!--NONE: 不做任何反应-->
        <!--WARNING: 输出警告日志（'org.apache.ibatis.session.AutoMappingUnknownColumnBehavior' 的日志等级必须设置为 WARN）-->
        <!--FAILING: 映射失败 (抛出 SqlSessionException)-->
        <setting name="autoMappingUnknownColumnBehavior" value="NONE"/>
        <!--        配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（PreparedStatement）； BATCH 执行器不仅重用语句还会执行批量更新。	SIMPLE REUSE BATCH	SIMPLE-->
        <setting name="defaultExecutorType" value="SIMPLE"/>
        <!--        设置超时时间，它决定数据库驱动等待数据库响应的秒数。	任意正整数	未设置 (null)-->
        <setting name="defaultStatementTimeout" value="3600"/>
        <!--        为驱动的结果集获取数量（fetchSize）设置一个建议值。此参数只可以在查询设置中被覆盖。	任意正整数	未设置 (null)-->
        <setting name="defaultFetchSize" value="1000"/>
        <!--        指定语句默认的滚动策略。（新增于 3.5.2）	FORWARD_ONLY | SCROLL_SENSITIVE | SCROLL_INSENSITIVE | DEFAULT（等同于未设置）	未设置 (null)-->
        <setting name="defaultResultSetType" value="DEFAULT"/>
        <!--        是否允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为 false。	true | false	False-->
        <setting name="safeRowBoundsEnabled" value="false"/>
        <!--        是否允许在嵌套语句中使用结果处理器（ResultHandler）。如果允许使用则设置为 false。	true | false	True-->
        <setting name="safeResultHandlerEnabled" value="true"/>

        <!--        是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn。	true | false	False-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--        MyBatis 利用本地缓存机制（Local Cache）防止循环引用和加速重复的嵌套查询。 默认值为 SESSION，会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地缓存将仅用于执行语句，对相同 SqlSession 的不同查询将不会进行缓存。	SESSION | STATEMENT	SESSION-->
        <setting name="localCacheScope" value="SESSION"/>
        <!--        当没有为参数指定特定的 JDBC 类型时，空值的默认 JDBC 类型。 某些数据库驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER。	JdbcType 常量，常用值：NULL、VARCHAR 或 OTHER。	OTHER-->
        <setting name="jdbcTypeForNull" value="OTHER"/>
        <!--        指定对象的哪些方法触发一次延迟加载。	用逗号分隔的方法列表。	equals,clone,hashCode,toString-->
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
        <!--        指定当结果集中值为 null 的时候是否调用映射对象的 setter（map 对象时为 put）方法，这在依赖于 Map.keySet() 或 null 值进行初始化时比较有用。注意基本类型（int、boolean 等）是不能设置成 null 的。	true | false	false-->
        <setting name="callSettersOnNulls" value="false"/>
        <!--        指定当结果集中值为 null 的时候是否调用映射对象的 setter（map 对象时为 put）方法，这在依赖于 Map.keySet() 或 null 值进行初始化时比较有用。注意基本类型（int、boolean 等）是不能设置成 null 的。	true | false	false-->
        <setting name="returnInstanceForEmptyRow" value="false"/>
        <!--        指定 MyBatis 增加到日志名称的前缀。	任何字符串	未设置-->
        <setting name="logPrefix" value=""/>
        <!--        指定 MyBatis 所用日志的具体实现，未指定时将自动查找。	SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING	未设置-->
        <!-- 显示sql语句 -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!--        指定 Mybatis 创建可延迟加载对象所用到的代理工具。	CGLIB | JAVASSIST	JAVASSIST （MyBatis 3.3 以上）-->
        <setting name="proxyFactory" value="JAVASSIST"/>
        <!--        允许使用方法签名中的名称作为语句参数名称。 为了使用该特性，你的项目必须采用 Java 8 编译，并且加上 -parameters 选项。（新增于 3.4.1）	true | false	true-->
        <setting name="useActualParamName" value="true"/>
        <!--        从SQL中删除多余的空格字符。请注意，这也会影响SQL中的文字字符串。 (新增于 3.5.5)	true | false	false-->
        <setting name="shrinkWhitespacesInSql" value="false"/>
    </settings>
</configuration>